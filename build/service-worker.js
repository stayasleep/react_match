"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/react_match/build/index.html","577262e7ac7ca5ec15e19555ad66442c"],["/react_match/build/static/css/main.9fcf16da.css","393ad448df77301186be2fee335e3f52"],["/react_match/build/static/js/main.18b85bba.js","76e72c3a8c2061fce4458f4a84ddbfcd"],["/react_match/build/static/media/card_0.92fd808b.png","92fd808beb5661ba287dfe313e96d16f"],["/react_match/build/static/media/card_1.ab4a7c74.png","ab4a7c74b6e1fb86c34ab18cd6ab3e06"],["/react_match/build/static/media/card_2.1e40a92d.png","1e40a92d8e5b257e2782d6f96440ddcc"],["/react_match/build/static/media/card_3.65e39f8d.png","65e39f8d99f6786db61c75ed0164bc29"],["/react_match/build/static/media/card_4.3058f98e.png","3058f98e3c250bf6ec76d71d7c2a7320"],["/react_match/build/static/media/card_5.55e9dd14.png","55e9dd14e40ba48890ceaa47013c64cb"],["/react_match/build/static/media/card_6.b8b1091e.png","b8b1091eb7b6347e924dc0df6378c50e"],["/react_match/build/static/media/card_7.33f382cc.png","33f382cc0e5cf2c5205fc8058f52b77a"],["/react_match/build/static/media/card_8.03c5cfb6.png","03c5cfb6bc16a7ddc8956435b0477331"],["/react_match/build/static/media/card_back.d39f54df.jpg","d39f54df1f1e33c9480c0d24b3eaf4aa"],["/react_match/build/static/media/dbzheader.3110d3b7.png","3110d3b75c96aadfd45ecd1d578c7b62"],["/react_match/build/static/media/dbzside.1462247f.png","1462247f21690858fb1210379301575a"],["/react_match/build/static/media/font.58045dab.ttf","58045dabdc3a361cb9bb9faf2f1dd1f3"],["/react_match/build/static/media/kamejpg.16709584.jpg","167095843c3cb7980333e76bea75e210"],["/react_match/build/static/media/scout.1eb05f09.png","1eb05f09fb9d800810796f768d8302fb"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,c){var r=new URL(e);return c&&r.pathname.match(c)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),r=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/react_match/build/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});